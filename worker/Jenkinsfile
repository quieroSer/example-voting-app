pipeline {
/*    agent {
      docker{
        image 'maven:3.6.1-jdk-8-alpine'
        args '-v $HOME/.m2:/root/.m2'
      }
    }
*/

    agent none
    stages {
        stage('Build') {
            agent {
              docker{
                image 'maven:3.6.1-jdk-8-alpine'
                args '-v $HOME/.m2:/root/.m2'
              }
            }
            when{
                changeset "**/worker/**"
            }
            steps {
                echo 'Compiling worker app'
                dir('worker'){
                  sh 'mvn compile'
                }
            }
        }
        stage('Test') {
            agent {
              docker{
                image 'maven:3.6.1-jdk-8-alpine'
                args '-v $HOME/.m2:/root/.m2'
              }
            }
            when{
                changeset "**/worker/**"
            }
            steps {
                echo 'Running Unit Tests on worker app'
                dir('worker'){
                  sh 'mvn clean test'
                }
            }
        }
        stage('Package'){
            agent {
              docker{
                image 'maven:3.6.1-jdk-8-alpine'
                args '-v $HOME/.m2:/root/.m2'
              }
            }
            when{
              branch 'master'
              changeset "**/worker/**"
            }
            steps{
              echo "package worker app"
              dir('worker'){
                sh 'mvn package -DskipTests'
              }
            }
        }

        stage('docker-package') {
            agent any
            when{
                branch 'master'
                changeset "**/worker/**"
            }
            steps {
                echo 'Package worker app'
                script{
                      docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
                              def workerImage = docker.build("donquijotedelasnubes/worker:v${env.BUILD_ID}", "./worker")
                              workerImage.push()
                      }
                }
            }
        }
    }

    post {
        always{
            echo 'Build pipeline run is completed.'
        }
    }
}



